export = ActualAppOutput;
declare class ActualAppOutput {
    /**
     * @param output
     * @param {Image|object} output.image
     * @param {Image|object} output.thumbprint
     * @param {ImageMatchSettings|object} output.imageMatchSettings
     * @param {boolean} output.ignoreExpectedOutputSettings
     * @param {boolean} output.isMatching
     * @param {boolean} output.areImagesMatching
     * @param {Date|string} output.occurredAt
     * @param {object[]} output.userInputs
     * @param {string} output.windowTitle
     * @param {string} output.tag
     * @param {boolean} output.isPrimary
     */
    constructor({ image, thumbprint, imageMatchSettings, ignoreExpectedOutputSettings, isMatching, areImagesMatching, occurredAt, userInputs, windowTitle, tag, isPrimary, }?: {
        image: any;
        thumbprint: any;
        imageMatchSettings: any;
        ignoreExpectedOutputSettings: any;
        isMatching: any;
        areImagesMatching: any;
        occurredAt: any;
        userInputs: any;
        windowTitle: any;
        tag: any;
        isPrimary: any;
    });
    _image: any;
    _thumbprint: any;
    _imageMatchSettings: any;
    _ignoreExpectedOutputSettings: any;
    _isMatching: any;
    _areImagesMatching: any;
    _occurredAt: any;
    _userInputs: any;
    _windowTitle: any;
    _tag: any;
    _isPrimary: any;
    /**
     * @return {Image}
     */
    getImage(): import("./Image");
    /**
     * @param {Image} value
     */
    setImage(value: import("./Image")): void;
    /**
     * @return {Image}
     */
    getThumbprint(): import("./Image");
    /**
     * @param {Image} value
     */
    setThumbprint(value: import("./Image")): void;
    /**
     * @return {ImageMatchSettings}
     */
    getImageMatchSettings(): import("./ImageMatchSettings");
    /**
     * @param {ImageMatchSettings} value
     */
    setImageMatchSettings(value: import("./ImageMatchSettings")): void;
    /**
     * @return {boolean}
     */
    getIgnoreExpectedOutputSettings(): boolean;
    /**
     * @param {boolean} value
     */
    setIgnoreExpectedOutputSettings(value: boolean): void;
    /**
     * @return {boolean}
     */
    getIsMatching(): boolean;
    /**
     * @param {boolean} value
     */
    setIsMatching(value: boolean): void;
    /**
     * @return {boolean}
     */
    getAreImagesMatching(): boolean;
    /**
     * @param {boolean} value
     */
    setAreImagesMatching(value: boolean): void;
    /**
     * @return {Date}
     */
    getOccurredAt(): Date;
    /**
     * @param {Date} value
     */
    setOccurredAt(value: Date): void;
    /**
     * @return {object[]}
     */
    getUserInputs(): object[];
    /**
     * @param {object[]} value
     */
    setUserInputs(value: object[]): void;
    /**
     * @return {string}
     */
    getWindowTitle(): string;
    /**
     * @param {string} value
     */
    setWindowTitle(value: string): void;
    /**
     * @return {string}
     */
    getTag(): string;
    /**
     * @param {string} value
     */
    setTag(value: string): void;
    /**
     * @return {boolean}
     */
    getIsPrimary(): boolean;
    /**
     * @param {boolean} value
     */
    setIsPrimary(value: boolean): void;
    /**
     * @override
     */
    toJSON(): any;
    /**
     * @override
     */
    toString(): string;
}
