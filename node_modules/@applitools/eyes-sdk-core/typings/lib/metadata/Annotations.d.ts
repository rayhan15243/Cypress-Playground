export = Annotations;
declare class Annotations {
    /**
     * @param regions
     * @param {FloatingMatchSettings[]|object[]} regions.floating
     * @param {Region[]|object[]} regions.ignore
     * @param {Region[]|object[]} regions.strict
     * @param {Region[]|object[]} regions.content
     * @param {Region[]|object[]} regions.layout
     */
    constructor({ floating, ignore, strict, content, layout }?: {
        floating: any;
        ignore: any;
        strict: any;
        content: any;
        layout: any;
    });
    _floating: any;
    _ignore: any;
    _strict: any;
    _content: any;
    _layout: any;
    /**
     * @return {FloatingMatchSettings[]}
     */
    getFloating(): import("../config/FloatingMatchSettings")[];
    /**
     * @param {FloatingMatchSettings[]} value
     */
    setFloating(value: import("../config/FloatingMatchSettings")[]): void;
    /**
     * @return {Region[]}
     */
    getIgnore(): import("../geometry/Region")[];
    /**
     * @param {Region[]} value
     */
    setIgnore(value: import("../geometry/Region")[]): void;
    /**
     * @return {Region[]}
     */
    getStrict(): import("../geometry/Region")[];
    /**
     * @param {Region[]} value
     */
    setStrict(value: import("../geometry/Region")[]): void;
    /**
     * @return {Region[]}
     */
    getContent(): import("../geometry/Region")[];
    /**
     * @param {Region[]} value
     */
    setContent(value: import("../geometry/Region")[]): void;
    /**
     * @return {Region[]}
     */
    getLayout(): import("../geometry/Region")[];
    /**
     * @param {Region[]} value
     */
    setLayout(value: import("../geometry/Region")[]): void;
    /**
     * @override
     */
    toJSON(): any;
    /**
     * @override
     */
    toString(): string;
}
