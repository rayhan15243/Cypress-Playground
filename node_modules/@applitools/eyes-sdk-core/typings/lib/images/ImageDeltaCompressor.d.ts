export = ImageDeltaCompressor;
/**
 * Provides image compression based on delta between consecutive images
 */
declare class ImageDeltaCompressor {
    /**
     * Compresses a target image based on a difference from a source image.
     *
     * @param {Image|png.Image} targetData - The image we want to compress.
     * @param {Buffer} targetBuffer - The image we want to compress in its png buffer representation.
     * @param {Image|png.Image} sourceData - The baseline image by which a compression will be performed.
     * @param {number} [blockSize=10] - How many pixels per block.
     * @return {Buffer} - The compression result.
     */
    static compressByRawBlocks(targetData: (new (width?: number, height?: number) => HTMLImageElement) | any, targetBuffer: Buffer, sourceData: (new (width?: number, height?: number) => HTMLImageElement) | any, blockSize?: number): Buffer;
}
