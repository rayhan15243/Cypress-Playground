export = SessionStartInfo;
/**
 * Encapsulates data required to start session using the Session API.
 */
declare class SessionStartInfo {
    /**
     * @param {object} info
     * @param {string} info.agentId
     * @param {SessionType} [info.sessionType]
     * @param {string} info.appIdOrName
     * @param {string} [info.verId]
     * @param {string} info.scenarioIdOrName
     * @param {string} [info.displayName]
     * @param {BatchInfo} info.batchInfo
     * @param {string} [info.baselineEnvName]
     * @param {string} [info.environmentName]
     * @param {AppEnvironment} info.environment
     * @param {ImageMatchSettings} info.defaultMatchSettings
     * @param {string} [info.branchName]
     * @param {string} [info.parentBranchName]
     * @param {string} [info.parentBranchBaselineSavedBefore]
     * @param {string} [info.baselineBranchName]
     * @param {boolean} [info.compareWithParentBranch]
     * @param {boolean} [info.ignoreBaseline]
     * @param {boolean} [info.saveDiffs]
     * @param {boolean} [info.render]
     * @param {PropertyData[]} [info.properties]
     */
    constructor({ agentId, sessionType, appIdOrName, verId, scenarioIdOrName, displayName, batchInfo, baselineEnvName, environmentName, environment, defaultMatchSettings, branchName, parentBranchName, parentBranchBaselineSavedBefore, baselineBranchName, compareWithParentBranch, ignoreBaseline, saveDiffs, render, properties, }?: {
        agentId: string;
        sessionType: any;
        appIdOrName: string;
        verId: string;
        scenarioIdOrName: string;
        displayName: string;
        batchInfo: any;
        baselineEnvName: string;
        environmentName: string;
        environment: any;
        defaultMatchSettings: any;
        branchName: string;
        parentBranchName: string;
        parentBranchBaselineSavedBefore: string;
        baselineBranchName: string;
        compareWithParentBranch: boolean;
        ignoreBaseline: boolean;
        saveDiffs: boolean;
        render: boolean;
        properties: any[];
    });
    _agentId: string;
    _sessionType: any;
    _appIdOrName: string;
    _verId: string;
    _scenarioIdOrName: string;
    _displayName: string;
    _batchInfo: any;
    _baselineEnvName: string;
    _environmentName: string;
    _environment: any;
    _defaultMatchSettings: any;
    _branchName: string;
    _parentBranchName: string;
    _parentBranchBaselineSavedBefore: string;
    _baselineBranchName: string;
    _compareWithParentBranch: boolean;
    _ignoreBaseline: boolean;
    _saveDiffs: boolean;
    _render: boolean;
    _properties: any[];
    /**
     * @return {string}
     */
    getAgentId(): string;
    /**
     * @return {SessionType}
     */
    getSessionType(): any;
    /**
     * @return {string}
     */
    getAppIdOrName(): string;
    /**
     * @return {string}
     */
    getVerId(): string;
    /**
     * @return {string}
     */
    getScenarioIdOrName(): string;
    /**
     * @return {string}
     */
    getDisplayName(): string;
    /**
     * @return {BatchInfo}
     */
    getBatchInfo(): any;
    /**
     * @return {string}
     */
    getBaselineEnvName(): string;
    /**
     * @return {string}
     */
    getEnvironmentName(): string;
    /**
     * @return {AppEnvironment}
     */
    getEnvironment(): any;
    /**
     * @return {ImageMatchSettings}
     */
    getDefaultMatchSettings(): any;
    /**
     * @return {string}
     */
    getBranchName(): string;
    /**
     * @return {string}
     */
    getParentBranchName(): string;
    /**
     * @return {string}
     */
    getParentBranchBaselineSavedBefore(): string;
    /**
     * @return {string}
     */
    getBaselineBranchName(): string;
    /**
     * @return {boolean}
     */
    getCompareWithParentBranch(): boolean;
    /**
     * @return {boolean}
     */
    getIgnoreBaseline(): boolean;
    /**
     * @return {PropertyData[]}
     */
    getProperties(): any[];
    /**
     * @return {boolean}
     */
    getRender(): boolean;
    /**
     * @return {boolean}
     */
    getSaveDiffs(): boolean;
    /**
     * @override
     */
    toJSON(): any;
    /**
     * @override
     */
    toString(): string;
}
