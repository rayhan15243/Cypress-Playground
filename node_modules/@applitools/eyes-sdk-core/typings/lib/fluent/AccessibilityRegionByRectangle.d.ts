export = AccessibilityRegionByRectangle;
declare const AccessibilityRegionByRectangle_base: typeof import("./GetAccessibilityRegion");
/**
 * @typedef {import('../config/AccessibilityRegionType').AccessibilityRegionType} AccessibilityRegionType
 */
/**
 * @typedef AccessibilityPersistedRegion
 * @prop {number} left
 * @prop {number} top
 * @prop {number} width
 * @prop {number} height
 * @prop {AccessibilityRegionType} accessibilityType
 */
/**
 * @internal
 */
declare class AccessibilityRegionByRectangle extends AccessibilityRegionByRectangle_base {
    /**
     * @param {Region} rect
     * @param {AccessibilityRegionType} [type]
     */
    constructor(rect: any, type?: AccessibilityRegionType);
    _rect: any;
    _type: "IgnoreContrast" | "RegularText" | "LargeText" | "BoldText" | "GraphicalObject";
    /**
     * @return {Promise<AccessibilityPersistedRegion[]>}
     */
    toPersistedRegions(): Promise<AccessibilityPersistedRegion[]>;
}
declare namespace AccessibilityRegionByRectangle {
    export { AccessibilityRegionType, AccessibilityPersistedRegion };
}
type AccessibilityPersistedRegion = {
    left: number;
    top: number;
    width: number;
    height: number;
    accessibilityType: AccessibilityRegionType;
};
type AccessibilityRegionType = "IgnoreContrast" | "RegularText" | "LargeText" | "BoldText" | "GraphicalObject";
