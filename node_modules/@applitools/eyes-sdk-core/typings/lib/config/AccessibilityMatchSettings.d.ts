export = AccessibilityMatchSettings;
/**
 * @typedef {import('./AccessibilityRegionType').AccessibilityRegionType} AccessibilityRegionType
 */
/**
 * Encapsulates Accessibility match settings.
 */
declare class AccessibilityMatchSettings {
    /**
     * @param {object} settings
     * @param {number} settings.left
     * @param {number} settings.top
     * @param {number} settings.width
     * @param {number} settings.height
     * @param {AccessibilityRegionType} [settings.type]
     */
    constructor({ left, top, width, height, type }?: {
        left: number;
        top: number;
        width: number;
        height: number;
        type: AccessibilityRegionType;
    }, ...args: any[]);
    _left: number;
    _top: number;
    _width: number;
    _height: number;
    _type: "IgnoreContrast" | "RegularText" | "LargeText" | "BoldText" | "GraphicalObject";
    /**
     * @return {number}
     */
    getLeft(): number;
    /**
     * @param {number} value
     */
    setLeft(value: number): void;
    /**
     * @return {number}
     */
    getTop(): number;
    /**
     * @param {number} value
     */
    setTop(value: number): void;
    /**
     * @return {number}
     */
    getWidth(): number;
    /**
     * @param {number} value
     */
    setWidth(value: number): void;
    /**
     * @return {number}
     */
    getHeight(): number;
    /**
     * @param {number} value
     */
    setHeight(value: number): void;
    /**
     * @return {AccessibilityRegionType}
     */
    getType(): AccessibilityRegionType;
    /**
     * @param {AccessibilityRegionType} value
     */
    setType(value: AccessibilityRegionType): void;
    /**
     * @return {Region}
     */
    getRegion(): import("../geometry/Region");
    /**
     * @override
     */
    toJSON(): any;
    /**
     * @override
     */
    toString(): string;
}
declare namespace AccessibilityMatchSettings {
    export { AccessibilityRegionType };
}
type AccessibilityRegionType = "IgnoreContrast" | "RegularText" | "LargeText" | "BoldText" | "GraphicalObject";
