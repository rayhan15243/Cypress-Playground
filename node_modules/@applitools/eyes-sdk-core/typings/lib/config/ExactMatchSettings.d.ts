export = ExactMatchSettings;
/**
 * Encapsulates match settings for the a session.
 */
declare class ExactMatchSettings {
    /**
     * Encapsulate threshold settings for the "Exact" match level.
     * @param settings
     * @param {number} [settings.minDiffIntensity=0] - The minimum intensity difference of pixel to be considered a change. Valid
     *   values are 0-255.
     * @param {number} [settings.minDiffWidth=0] - The minimum width of an intensity filtered pixels cluster to be considered a
     *   change. Must be >= 0.
     * @param {number} [settings.minDiffHeight=0] - The minimum height of an intensity filtered pixels cluster to be considered a
     *   change. Must be >= 0.
     * @param {number} [settings.matchThreshold=0] - The maximum percentage(!) of different pixels (after intensity, width and
     *   height filtering) which is still considered as a match. Valid values are fractions between 0-1.
     */
    constructor({ minDiffIntensity, minDiffWidth, minDiffHeight, matchThreshold }?: {
        minDiffIntensity: any;
        minDiffWidth: any;
        minDiffHeight: any;
        matchThreshold: any;
    }, ...args: any[]);
    _minDiffIntensity: any;
    _minDiffWidth: any;
    _minDiffHeight: any;
    _matchThreshold: any;
    /**
     * @return {number} - The minimum intensity difference of pixel to be considered a change.
     */
    getMinDiffIntensity(): number;
    /**
     * @param {number} value - The minimum intensity difference of pixel to be considered a change. Valid values are 0-255.
     */
    setMinDiffIntensity(value: number): void;
    /**
     * @return {number} - The minimum width of an intensity filtered pixels cluster to be considered a change.
     */
    getMinDiffWidth(): number;
    /**
     * @param {number} value - The minimum width of an intensity filtered pixels cluster to be considered a change.
     *   Must be >= 0.
     */
    setMinDiffWidth(value: number): void;
    /**
     * @return {number} - The minimum width of an intensity filtered pixels cluster to be considered a change.
     */
    getMinDiffHeight(): number;
    /**
     * @param {number} value - The minimum height of an intensity filtered pixels cluster to be considered a change. Must
     *   be >= 0.
     */
    setMinDiffHeight(value: number): void;
    /**
     * @return {number} - The maximum percentage(!) of different pixels (after intensity, width and height filtering) which
     *   is still considered as a match.
     */
    getMatchThreshold(): number;
    /**
     * @param {number} value - The maximum percentage(!) of different pixels (after intensity, width and height filtering)
     *   which is still considered as a match. Valid values are fractions between 0-1.
     */
    setMatchThreshold(value: number): void;
    /**
     * @override
     */
    toJSON(): any;
    /**
     * @override
     */
    toString(): string;
}
