export = FloatingMatchSettings;
/**
 * Encapsulates floating match settings for the a session.
 */
declare class FloatingMatchSettings {
    /**
     * @param settings
     * @param {number} settings.left
     * @param {number} settings.top
     * @param {number} settings.width
     * @param {number} settings.height
     * @param {number} settings.maxUpOffset
     * @param {number} settings.maxDownOffset
     * @param {number} settings.maxLeftOffset
     * @param {number} settings.maxRightOffset
     */
    constructor({ left, top, width, height, maxUpOffset, maxDownOffset, maxLeftOffset, maxRightOffset, }?: {
        left: any;
        top: any;
        width: any;
        height: any;
        maxUpOffset: any;
        maxDownOffset: any;
        maxLeftOffset: any;
        maxRightOffset: any;
    }, ...args: any[]);
    _left: any;
    _top: any;
    _width: any;
    _height: any;
    _maxUpOffset: any;
    _maxDownOffset: any;
    _maxLeftOffset: any;
    _maxRightOffset: any;
    /**
     * @return {number}
     */
    getLeft(): number;
    /**
     * @param {number} value
     */
    setLeft(value: number): void;
    /**
     * @return {number}
     */
    getTop(): number;
    /**
     * @param {number} value
     */
    setTop(value: number): void;
    /**
     * @return {number}
     */
    getWidth(): number;
    /**
     * @param {number} value
     */
    setWidth(value: number): void;
    /**
     * @return {number}
     */
    getHeight(): number;
    /**
     * @param {number} value
     */
    setHeight(value: number): void;
    /**
     * @return {number}
     */
    getMaxUpOffset(): number;
    /**
     * @param {number} value
     */
    setMaxUpOffset(value: number): void;
    /**
     * @return {number}
     */
    getMaxDownOffset(): number;
    /**
     * @param {number} value
     */
    setMaxDownOffset(value: number): void;
    /**
     * @return {number}
     */
    getMaxLeftOffset(): number;
    /**
     * @param {number} value
     */
    setMaxLeftOffset(value: number): void;
    /**
     * @return {number}
     */
    getMaxRightOffset(): number;
    /**
     * @param {number} value
     */
    setMaxRightOffset(value: number): void;
    /**
     * @return {Region}
     */
    getRegion(): import("../geometry/Region");
    /**
     * @override
     */
    toJSON(): any;
    /**
     * @override
     */
    toString(): string;
}
