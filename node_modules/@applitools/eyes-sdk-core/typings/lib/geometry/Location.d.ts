export = Location;
/**
 * @typedef {{x: number, y: number}} LocationObject
 */
/**
 * A location in a two-dimensional plane.
 */
declare class Location {
    /**
     * Creates a Location instance.
     * @param {Location|LocationObject|number} varArg1 - The Location (or object) to clone from or the X coordinate of new Location.
     * @param {number} [varArg2] - The Y coordinate of new Location.
     */
    constructor(varArg1: Location | LocationObject | number, varArg2?: number, ...args: any[]);
    _x: number;
    _y: number;
    /**
     * @return {number} The X coordinate of this location.
     */
    getX(): number;
    /**
     * @return {number} - The Y coordinate of this location.
     */
    getY(): number;
    /**
     * Indicates whether some other Location is "equal to" this one.
     *
     * @param {Location} obj - The reference object with which to compare.
     * @return {boolean} - A {@code true} if this object is the same as the obj argument, {@code false} otherwise.
     */
    equals(obj: Location): boolean;
    /**
     * Get a location translated by the specified amount.
     *
     * @param {number} dx - The amount to offset the x-coordinate.
     * @param {number} dy - The amount to offset the y-coordinate.
     * @return {Location} - A location translated by the specified amount.
     */
    offset(dx: number, dy: number): Location;
    /**
     *
     * @param {Location} other
     * @return {Location}
     */
    offsetNegative(other: Location): Location;
    /**
     * Get a location translated by the specified amount.
     *
     * @param {Location} amount - The amount to offset.
     * @return {Location} - A location translated by the specified amount.
     */
    offsetByLocation(amount: Location): Location;
    /**
     * Get a scaled location.
     *
     * @param {number} scaleRatio - The ratio by which to scale the results.
     * @return {Location} - A scaled copy of the current location.
     */
    scale(scaleRatio: number): Location;
    /**
     * @override
     */
    toJSON(): {
        x: number;
        y: number;
    };
    /**
     * @override
     */
    toString(): string;
    toStringForFilename(): string;
}
declare namespace Location {
    export { ZERO, LocationObject };
}
type LocationObject = {
    x: number;
    y: number;
};
declare var ZERO: Location;
