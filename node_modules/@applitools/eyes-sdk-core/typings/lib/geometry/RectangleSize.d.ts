export = RectangleSize;
/**
 * @typedef PlainRectangleSize
 * @prop {number} width
 * @prop {number} height
 */
/**
 * Represents a 2D size.
 */
declare class RectangleSize {
    /**
     * Parses a string into a {@link RectangleSize} instance.
     *
     * @param {string} size - A string representing width and height separated by "x".
     * @return {RectangleSize} - An instance representing the input size.
     */
    static parse(size: string): RectangleSize;
    /**
     * Creates a RectangleSize instance.
     * @param {RectangleSize|PlainRectangleSize|number} varArg1 - The RectangleSize (or object) to clone from or the width of new RectangleSize.
     * @param {number} [varArg2] - The height of new RectangleSize.
     */
    constructor(varArg1: RectangleSize | PlainRectangleSize | number, varArg2?: number, ...args: any[]);
    _width: any;
    _height: any;
    /**
     * @return {boolean}
     */
    isEmpty(): boolean;
    /**
     * @return {number} - The rectangle's width.
     */
    getWidth(): number;
    /**
     * @return {number} - The rectangle's height.
     */
    getHeight(): number;
    /**
     * Indicates whether some other RectangleSize is "equal to" this one.
     *
     * @param {object|RectangleSize} obj - The reference object with which to compare.
     * @return {boolean} - A {@code true} if this object is the same as the obj argument; {@code false} otherwise.
     */
    equals(obj: object | RectangleSize): boolean;
    /**
     * Get a scaled version of the current size.
     *
     * @param {number} scaleRatio - The ratio by which to scale the results.
     * @return {RectangleSize} - A scaled copy of the current size.
     */
    scale(scaleRatio: number): RectangleSize;
    /**
     * @override
     */
    toJSON(): {
        width: any;
        height: any;
    };
    /**
     * @override
     */
    toString(): string;
}
declare namespace RectangleSize {
    export { EMPTY, PlainRectangleSize };
}
type PlainRectangleSize = {
    width: number;
    height: number;
};
declare var EMPTY: RectangleSize;
