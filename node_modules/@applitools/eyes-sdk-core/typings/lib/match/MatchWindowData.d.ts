export = MatchWindowData;
/**
 * Encapsulates the data to be sent to the agent on a "matchWindow" command.
 */
declare class MatchWindowData {
    /**
     * @param data
     * @param {Trigger[]} data.userInputs - A list of triggers between the previous matchWindow call and the current matchWindow
     *   call. Can be array of size 0, but MUST NOT be null.
     * @param {AppOutput} data.appOutput - The appOutput for the current matchWindow call.
     * @param {string} data.tag - The tag of the window to be matched.
     * @param {boolean} [data.ignoreMismatch]
     * @param {Options} [data.options]
     */
    constructor({ userInputs, appOutput, tag, ignoreMismatch, options }?: {
        userInputs: any;
        appOutput: any;
        tag: any;
        ignoreMismatch: any;
        options: any;
    }, ...args: any[]);
    _userInputs: any;
    _appOutput: any;
    _tag: any;
    _ignoreMismatch: any;
    _options: any;
    /**
     * @return {Trigger[]}
     */
    getUserInputs(): any[];
    /**
     * @return {AppOutput}
     */
    getAppOutput(): any;
    /**
     * @return {string}
     */
    getTag(): string;
    /**
     * @return {?boolean}
     */
    getIgnoreMismatch(): boolean | null;
    /**
     * @return {?Options}
     */
    getOptions(): any;
    /**
     * @override
     */
    toJSON(): any;
    /**
     * @override
     */
    toString(): string;
}
