export = ContextBasedScaleProvider;
declare const ContextBasedScaleProvider_base: typeof import("./ScaleProvider");
/**
 * Scale provider which determines the scale ratio according to the context.
 */
declare class ContextBasedScaleProvider extends ContextBasedScaleProvider_base {
    /**
     * @param {Logger} logger
     * @param {RectangleSize} topLevelContextEntireSize - The total size of the top level context. E.g., for selenium this
     *   would be the document size of the top level frame.
     * @param {RectangleSize} viewportSize - The viewport size.
     * @param {number} devicePixelRatio - The device pixel ratio of the platform on which the application is running.
     * @param {boolean} isMobileDevice
     */
    constructor(logger: any, topLevelContextEntireSize: any, viewportSize: any, devicePixelRatio: number, isMobileDevice: boolean);
    /** @type {Logger} */
    _logger: any;
    /** @type {RectangleSize} */
    _topLevelContextEntireSize: any;
    /** @type {RectangleSize} */
    _viewportSize: any;
    /** @type {number} */
    _devicePixelRatio: number;
    /** @type {boolean} */
    _isMobileDevice: boolean;
    /** @type {number} */
    _scaleRatio: number;
    /**
     * Set the scale ratio based on the given image.
     *
     * @param {number} imageToScaleWidth - The width of the image to scale, used for calculating the scale ratio.
     */
    updateScaleRatio(imageToScaleWidth: number): void;
}
