/**
 * Checks if `value` is `null` or `undefined`. But the `value` can be one of following: `0`, `NaN`, `false`, `""`.
 *
 * @param {*} value
 * @return {boolean}
 */
export function isNull(value: any): boolean;
/**
 * Checks if `value` is NOT `null` and NOT `undefined`.
 *
 * @param {*} value
 * @return {boolean}
 */
export function isNotNull(value: any): boolean;
/**
 * Checks if `value` has a type `string` or created by the `String` constructor
 *
 * @param {*} value
 * @return {boolean}
 */
export function isString(value: any): boolean;
/**
 * Checks if `value` has a type `number` or created by the `Number` constructor
 *
 * @param {*} value
 * @return {boolean}
 */
export function isNumber(value: any): boolean;
/**
 * Checks if `value` has a type `number` or created by the `Number` constructor and the value is integer
 *
 * @param {*} value
 * @return {boolean}
 */
export function isInteger(value: any): boolean;
/**
 * Checks if `value` has a type `boolean` or created by the `Boolean` constructor
 *
 * @param {*} value
 * @return {boolean}
 */
export function isBoolean(value: any): boolean;
/**
 * Checks if `value` has a type `object` and not `null`.
 *
 * @param {*} value
 * @return {boolean}
 */
export function isObject(value: any): boolean;
/**
 * Checks if `value` is a plain object. An object created by either `{}`, `new Object()` or `Object.create(null)`.
 *
 * @param {*} value
 * @return {boolean}
 */
export function isPlainObject(value: any): boolean;
/**
 * Checks if `value` is an array.
 *
 * @param {*} value
 * @return {boolean}
 */
export function isArray(value: any): boolean;
/**
 * Checks if `value` is a Buffer.
 *
 * @param {*} value
 * @return {boolean}
 */
export function isBuffer(value: any): boolean;
/**
 * Checks if `value` is a base64 string.
 *
 * @param {*} value
 * @return {boolean}
 */
export function isBase64(value: any): boolean;
/**
 * Checks if `value` is a base64 string.
 *
 * @param {*} value
 * @return {boolean}
 */
export function isUrl(value: any): boolean;
/**
 * Checks if `keys` is a direct property(ies) of `object`.
 *
 * @param {object} object - The object to query.
 * @param {string|string[]} keys - The key(s) to check.
 */
export function has(object: object, keys: string | string[]): boolean;
/**
 * Checks if `methods` is a method(s) of `object`.
 *
 * @param {object} object - The object to query.
 * @param {string|string[]} methods - The methods(s) to check.
 */
export function hasMethod(object: object, methods: string | string[]): boolean;
/**
 * Returns a `value` if it is !== undefined, or `defaultValue` otherwise
 *
 * @param {*} value
 * @param {*} defaultValue
 * @return {*}
 */
export function getOrDefault(value: any, defaultValue: any): any;
/**
 * Checks if `value` has a type `function`
 *
 * @param {*} value
 * @return {boolean}
 */
export function isFunction(value: any): boolean;
/**
 * Checks if `value` is implements iterator protocol
 *
 * @param {*} value
 * @return {boolean}
 */
export function isIterator(value: any): boolean;
