export = RenderRequest;
/**
 * Encapsulates data required to start render using the RenderingGrid API.
 */
declare class RenderRequest {
    /**
     * @param request
     * @param {string} request.webhook
     * @param {string} request.url
     * @param {RGridDom} request.dom
     * @param {RGridResource[]} request.resources
     * @param {RenderInfo} [request.renderInfo]
     * @param {string} [request.platform]
     * @param {string} [request.browserName]
     * @param {Object} [request.scriptHooks]
     * @param {string[]} request.selectorsToFindRegionsFor
     * @param {boolean} request.sendDom
     * @param {string} request.renderId
     * @param {string} request.agentId
     */
    constructor({ webhook, stitchingService, url, dom, resources, renderInfo, platform, browserName, scriptHooks, selectorsToFindRegionsFor, sendDom, renderId, agentId, }?: {
        webhook: any;
        stitchingService: any;
        url: any;
        dom: any;
        resources: any;
        renderInfo: any;
        platform: any;
        browserName: any;
        scriptHooks: any;
        selectorsToFindRegionsFor: any;
        sendDom: any;
        renderId: any;
        agentId: any;
    });
    _webhook: any;
    _stitchingService: any;
    _url: any;
    _dom: any;
    _resources: any;
    _renderInfo: any;
    _platform: any;
    _browserName: any;
    _renderId: any;
    _scriptHooks: any;
    _selectorsToFindRegionsFor: any;
    _sendDom: any;
    _agentId: any;
    /**
     * @return {string}
     */
    getWebhook(): string;
    /**
     * @return {string}
     */
    getStitchingService(): string;
    /**
     * @return {string}
     */
    getUrl(): string;
    /**
     * @return {RGridDom}
     */
    getDom(): any;
    /**
     * @return {RGridResource[]}
     */
    getResources(): any[];
    /**
     * @return {RenderInfo}
     */
    getRenderInfo(): any;
    /**
     * @return {string}
     */
    getPlatform(): string;
    /**
     * @return {string}
     */
    getBrowserName(): string;
    /**
     * @return {string}
     */
    getRenderId(): string;
    /**
     * @return {string}
     */
    getAgentId(): string;
    /**
     * @param {string} value
     */
    setAgentId(value: string): void;
    /**
     * @param {string} value
     */
    setRenderId(value: string): void;
    /**
     * @return {string}
     */
    getScriptHooks(): string;
    /**
     * @param {string} value
     */
    setScriptHooks(value: string): void;
    /**
     * @return {string[]}
     */
    getSelectorsToFindRegionsFor(): string[];
    /**
     * @param {string[]} value
     */
    setSelectorsToFindRegionsFor(value: string[]): void;
    /**
     * @return {boolean}
     */
    getSendDom(): boolean;
    /**
     * @param {boolean} value
     */
    setSendDom(value: boolean): void;
    /**
     * @override
     */
    toJSON(): {
        webhook: any;
        stitchingService: any;
        url: any;
        dom: any;
        resources: {};
    };
    /**
     * @override
     */
    toString(): string;
}
