export = RunningRender;
/**
 * Encapsulates data for the render currently running in the client.
 */
declare class RunningRender {
    /**
     * @param data
     * @param {string} data.renderId
     * @param {string} data.jobId
     * @param {RenderStatus} data.renderStatus
     * @param {string[]} data.needMoreResources
     * @param {boolean} data.needMoreDom
     */
    constructor({ renderId, jobId, renderStatus, needMoreResources, needMoreDom }?: {
        renderId: any;
        jobId: any;
        renderStatus: any;
        needMoreResources: any;
        needMoreDom: any;
    });
    _renderId: any;
    _jobId: any;
    _renderStatus: any;
    _needMoreResources: any;
    _needMoreDom: any;
    /**
     * @return {string}
     */
    getRenderId(): string;
    /**
     * @param {string} value
     */
    setRenderId(value: string): void;
    /**
     * @return {string}
     */
    getJobId(): string;
    /**
     * @param {string} value
     */
    setJobId(value: string): void;
    /**
     * @return {RenderStatus}
     */
    getRenderStatus(): any;
    /**
     * @param {RenderStatus} value
     */
    setRenderStatus(value: any): void;
    /**
     * @return {string[]}
     */
    getNeedMoreResources(): string[];
    /**
     * @param {string[]} value
     */
    setNeedMoreResources(value: string[]): void;
    /**
     * @return {boolean}
     */
    getNeedMoreDom(): boolean;
    /**
     * @param {boolean} value
     */
    setNeedMoreDom(value: boolean): void;
    /**
     * @override
     */
    toJSON(): any;
    /**
     * @override
     */
    toString(): string;
}
